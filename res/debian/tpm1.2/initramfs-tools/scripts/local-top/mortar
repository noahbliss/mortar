#!/bin/sh
# Noah Bliss
# Some inspiration from https://github.com/morbitzer/linux-luks-tpm-boot/blob/master/tpm-script and https://github.com/morbitzer/linux-luks-tpm-boot/blob/master/getsecret.sh

PREREQ=""
prereqs()
{
	echo "$PREREQ"
}

case $1 in
	prereqs)
		prereqs
		exit 0
		;;
esac

# Get the TPM working.
chown tss:tss /dev/tpm0
chmod 600 /dev/tpm0
ip link set lo up
# start tcsd 
if [ -f /sbin/tcsd ]; then /sbin/tcsd; else echo "Failed to start tcsd."; fi

mkdir -p /run/cryptsetup

echo "Initializing... Please wait a few seconds for TPM validation of boot sequence."
echo "Measuring boot system integrity..."
CRYPTPAIRS= #name(s) of the unlocked device(s) (first row in crypttab)
SLOT= #Keyslot number in use by mortar.
TPMINDEX=
HEADERSHA256=
HEADERFILE=

for CRYPTPAIR in $CRYPTPAIRS; do 
  CRYPTNAME=${CRYPTPAIR%:*}
  CRYPTDEV=${CRYPTPAIR#*:}
  if [ -f "$HEADERFILE" ]; then rm "$HEADERFILE"; fi
  if cryptsetup luksHeaderBackup "$CRYPTDEV" --header-backup-file "$HEADERFILE"; then
    HEADERSHA256CUR=`sha256sum "$HEADERFILE" | cut -f1 -d' '`
    if test "${HEADERSHA256#*$HEADERSHA256CUR}" != "$HEADERSHA256"; then
      echo "HEADER VALIDATION SUCCEEDED FOR $CRYPTNAME."
    else
      echo "HEADER VALIDATION FAILED FOR $CRYPTNAME."
      echo "WAITING 10 SECONDS BEFORE CONTINUING."
      echo "KILL SYSTEM NOW IF YOU DO NOT TRUST THIS HEADER."
      sleep 7
      echo "3..."
      sleep 1
      echo "2..."
      sleep 1
      echo "1..."
      sleep 1
    fi
    sleep 2
  fi
  if [ -f "$HEADERFILE" ]; then rm "$HEADERFILE"; fi
done

# Get Mortar key.
if tpm_nvread -i "$TPMINDEX" -f /tmp/mortar.key >/dev/null; then
  echo -e "TPM VALIDATION SUCCEEDED.\n\n"
else
  echo -e "TPM VALIDATION FAILED.\n\n"
  sleep 3
fi

# Disable future key fetches.
tcsd && sleep 1
tpm_nvread -i "$TPMINDEX" -s 0 >> /dev/null

# Decrypt disk(s).
for CRYPTPAIR in $CRYPTPAIRS; do 
  CRYPTNAME=${CRYPTPAIR%:*}
  CRYPTDEV=${CRYPTPAIR#*:}
  # Test if the disk is already unlocked.
  if [ -e /dev/mapper/"$CRYPTNAME" ]; then
    echo "skipping $CTYPTNAME as it already exists"
    sleep 3
  else
    if cryptsetup luksOpen $CRYPTDEV $CRYPTNAME --key-file /tmp/mortar.key; then
      echo "opened $CRYPTNAME"
    else
      echo "could't open $CRYPTNAME"
      sleep 3
    fi
  fi
done
sleep 2
rm /tmp/mortar.key
if [ -f /tmp/mortar.key ]; then echo "FAILED TO REMOVE KEYFILE!"; fi
